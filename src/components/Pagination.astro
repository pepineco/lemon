---
import { getPageLink } from '../lib/blog-helpers.ts'

export interface Props {
	currentPage: number
	numberOfPages: number
	tag: string
}

const { currentPage, numberOfPages, tag = '' } = Astro.props

const isFirstPage = currentPage === 1
const isLastPage = currentPage === numberOfPages

const startPage = currentPage - 2 < 1 ? 1 : currentPage - 2
const endPage =
	currentPage + 2 > numberOfPages ? numberOfPages : currentPage + 2

let pages = []
for (let i = startPage; i <= endPage; i++) {
	pages.push(i)
}
---

<div class="pagination">
	<a href={getPageLink(1, tag)} class={isFirstPage && 'inactive'}>&lt;&lt;</a>
	{
		pages.map((p: number) => (
			<a href={getPageLink(p, tag)} class={p === currentPage && 'inactive'}>
				{p}
			</a>
		))
	}
	<a href={getPageLink(numberOfPages, tag)} class={isLastPage && 'inactive'}
		>&gt;&gt;</a
	>
</div>

<style lang="scss">
	.pagination {
		display: flex;
		flex-wrap:wrap;
		width: 100%;
		margin: 0 auto;
		color: var(--fg);
		justify-content: center;
		align-items: center;
	}
	.pagination a {
		display: block;
		letter-spacing:normal;
		font-size:16px;
		line-height:44px;
		width: 44px;
		height:44px;
		border-radius:22px;
		margin: 0 0.4rem;
		background: #f4f4f4;
		color: inherit;
		text-align: center;
		text-decoration: none;
		&:first-of-type,&:last-of-type{
			background: none;
		}
		&:hover{
			text-decoration: none;
		}
	}
	.pagination a:hover:not(.inactive) {
		background: $pager_active;
		font-weight:700;
		color:#fff;
		box-shadow:3px 3px 6px #cacaca;
		&:first-of-type,&:last-of-type{
			background: none;
			color: var(--fg);
			box-shadow: none;
		}
	}
	.pagination a.inactive {
		background: $pager_active;
		color:#fff;
		text-decoration: none;
		&:first-of-type,&:last-of-type{
			background: none;
			color: var(--fg);
		}
	}
</style>
