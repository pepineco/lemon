---
import type { SelectProperty } from '../../../../../lib/interfaces.ts'
import {
	getPostsByTagAndPage,
	getRankedPosts,
	getAllTags,
	getNumberOfPagesByTag,
} from '../../../../../lib/notion/client.ts'
import Layout from '../../../../../layouts/Layout.astro'
import NoContents from '../../../../../components/NoContents.astro'
import ListPost from '../../../../../components/ListPost.astro'
import Pagination from '../../../../../components/Pagination.astro'
import BlogPostsLink from '../../../../../components/BlogPostsLink.astro'
import BlogTagsLink from '../../../../../components/BlogTagsLink.astro'
import styles from '../../../../../styles/blog.module.css'
import '../../../../../styles/notion-color.css'

export async function getStaticPaths() {
	const allTags = await getAllTags()

	let params = []

	await Promise.all(
		allTags.map((tag: SelectProperty) => {
			return getNumberOfPagesByTag(tag.name).then((numberOfPages: number) => {
				for (let i = 2; i <= numberOfPages; i++) {
					params.push({ params: { tag: tag.name, page: i.toString() } })
				}
			})
		})
	)

	return params
}

const { tag, page } = Astro.params

const [posts, rankedPosts, tags, numberOfPages] = await Promise.all([
	getPostsByTagAndPage(tag, parseInt(page, 10)),
	getRankedPosts(),
	getAllTags(),
	getNumberOfPagesByTag(tag),
])

const currentTag = posts[0].Tags.find((t) => t.name === tag)
---

<Layout
	title={`Posts in ${tag} ${page}/${numberOfPages}`}
	path={`/posts/tag/${tag}/page/${page}`}
>
	<div slot="main" class={styles.main}>
		<header>
			<h1>
				<span class={`h1tag ${currentTag.color}`}>{tag}&nbsp;{page}/{numberOfPages} ページ</span>
			</h1>
		</header>
		<div class="list">

		{
			posts.length === 0 ? (
				<NoContents contents={posts} />
			) : (
				posts.map((post) => (
					<div class="post-wrapper" key={post.Slug}>
						<ListPost post={post} />
					</div>
				))
			)
		}
		</div>
		<footer class="pagination">
			<Pagination
				tag={tag}
				currentPage={parseInt(page, 10)}
				numberOfPages={numberOfPages}
			/>
		</footer>
	</div>

	<div slot="aside" class={styles.aside}>
		<BlogTagsLink heading="Categories" tags={tags} />
	</div>
</Layout>

<style lang="scss">
	h1{
		padding: 6% 0 0;
		text-align: center;
		font-family: $font_title;
		font-weight:900;
		font-size: 30px;
		span{
			display: inline-block;
			padding:0 2% 0 0;
		}
	}
	.list{
		padding: 6% 0;
		display: flex;
		flex-wrap:wrap;
		.post-wrapper{
			width: 31%;
			margin:0 3% 5% 0;
			display: flex;
			&:nth-of-type(3n){
				margin:0 0 5% 0;
			}
			@media #{$sp}{
				width: 100%;
				margin:0 0 5% 0;
			}
		}
	}
	footer.pagination{
		padding:4% 0;
	}
</style>